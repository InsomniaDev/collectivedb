package main

import (
    "fmt"
    "math/rand"
    "time"
)

func something() {
    // Set the seed for the random number generator
    rand.Seed(time.Now().UnixNano())

    // Define a slice of strings
    stringSlice := []string{"apple", "banana", "orange", "strawberry", "grape"}

    // Prompt the user for the number of strings to assign
    var numStrings int
    fmt.Print("Enter the number of strings to assign: ")
    fmt.Scan(&numStrings)

    // Randomly assign strings from the slice
    for i := 0; i < numStrings; i++ {
        // Generate a random index
        randIndex := rand.Intn(len(stringSlice))

        // Print the string at the random index
        fmt.Println(stringSlice[randIndex])
    }
}

func GetNameservers(resolvConf []byte) []string {
	nameservers := []string{}
	nsRegexp          := regexp.MustCompile(`^\s*search\s*(([^\s]+\s*)*)$`)
	for _, line := range getLines(resolvConf, []byte("#")) {
		match := searchRegexp.FindSubmatch(line)
		if match == nil {
			continue
		}
		domains = strings.Fields(string(match[1]))
	}
	return nameservers
}

func getLines(input []byte, commentMarker []byte) [][]byte {
	lines := bytes.Split(input, []byte("\n"))
	var output [][]byte
	for _, currentLine := range lines {
		var commentIndex = bytes.Index(currentLine, commentMarker)
		if commentIndex == -1 {
			output = append(output, currentLine)
		} else {
			output = append(output, currentLine[:commentIndex])
		}
	}
	return output
}

    // Set the seed for the random number generator
    rand.Seed(time.Now().UnixNano())

    // Define a slice of strings
    stringSlice := []string{"apple", "banana", "orange", "strawberry", "grape"}

    // Prompt the user for the number of strings to assign
    var numStrings int
    fmt.Print("Enter the number of strings to assign: ")
    fmt.Scan(&numStrings)

    // Randomly assign strings from the slice
    for i := 0; i < numStrings; i++ {
        // Generate a random index
        randIndex := rand.Intn(len(stringSlice))

        // Print the string at the random index
        fmt.Println(stringSlice[randIndex])
    }